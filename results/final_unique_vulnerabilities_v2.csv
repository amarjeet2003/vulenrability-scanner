Severity,Title,File,Line,Code,Details,CWE ID,Source
HIGH,Web applications should not have a main method,missingpasswordmasking.java,20,import javax.servlet.http.*;,"Web applications should not have a main method Having a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",,Horusec
HIGH,Web applications should not have a main method,embeddedmaliciouscode.java,20,import javax.servlet.http.*;,"Web applications should not have a main method Having a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",,Horusec
HIGH,Web applications should not have a main method,ldapinjection.java,20,import javax.servlet.http.*;,"Web applications should not have a main method Having a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",,Horusec
HIGH,Web applications should not have a main method,integerunderflow.java,21,import javax.servlet.http.*;,"Web applications should not have a main method Having a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",,Horusec
MEDIUM,Execute OS Command,logictimebomb.java,38,"Runtime.getRuntime().exec(""c:\\windows\\system32\\evil.exe"");",Execute OS Command Execute OS Command. For more information checkout the CWE-78 (https://cwe.mitre.org/data/definitions/78.html) advisory.,,Horusec
LOW,TCP Socket,ldapinjection.java,58,"socket = new Socket(""host.example.org"", 39544);",TCP Socket TCP Socket,,Horusec
POTENTIAL ISSUE,Public Class Not Declared as Final,embeddedmaliciouscode.java,29,public class CWE506_Embedded_Malicious_Code__aes_encrypted_payload_03 extends AbstractTestCase,The class is not declared as final as per OWASP recommendations. It is considered best practice to make classes final where possible and practical (i.e. It has no classes which inherit from it). Non-Final classes can allow an attacker to extend a class in a malicious manner. Manually inspect the code to determine whether or not it is practical to make this class final.,,VCG
LOW,Operation on Primitive Data Type,embeddedmaliciouscode.java,45,for (int i = 0; i < payloadLength; i+=2),The code appears to be carrying out a mathematical operation on a primitive data type. In some circumstances this can result in an overflow and unexpected behaviour. Check the code manually to determine the risk.,,VCG
LOW,Operation on Primitive Data Type,embeddedmaliciouscode.java,47,"data[i/2] = (byte)((Character.digit(payload.charAt(i), 16) << 4) + Character.digit(payload.charAt(i+1), 16));",The code appears to be carrying out a mathematical operation on a primitive data type. In some circumstances this can result in an overflow and unexpected behaviour. Check the code manually to determine the risk.,,VCG
POTENTIAL ISSUE,Public Class Not Declared as Final,integerunderflow.java,31,public class CWE191_Integer_Underflow__int_URLConnection_multiply_06 extends AbstractTestCase,The class is not declared as final as per OWASP recommendations. It is considered best practice to make classes final where possible and practical (i.e. It has no classes which inherit from it). Non-Final classes can allow an attacker to extend a class in a malicious manner. Manually inspect the code to determine whether or not it is practical to make this class final.,,VCG
SUSPICIOUS COMMENT,,integerunderflow.java,133,,"FIX: Use a hardcoded number that won't cause underflow, overflow, divide by zero, or loss-of-precision issues */",,VCG
SUSPICIOUS COMMENT,,integerunderflow.java,155,,"FIX: Use a hardcoded number that won't cause underflow, overflow, divide by zero, or loss-of-precision issues */",,VCG
POTENTIAL ISSUE,Public Class Not Declared as Final,ldapinjection.java,34,public class CWE90_LDAP_Injection__connect_tcp_04 extends AbstractTestCase,The class is not declared as final as per OWASP recommendations. It is considered best practice to make classes final where possible and practical (i.e. It has no classes which inherit from it). Non-Final classes can allow an attacker to extend a class in a malicious manner. Manually inspect the code to determine whether or not it is practical to make this class final.,,VCG
SUSPICIOUS COMMENT,,ldapinjection.java,180,,FIX: Use a hardcoded string */,,VCG
SUSPICIOUS COMMENT,,ldapinjection.java,240,,FIX: Use a hardcoded string */,,VCG
POTENTIAL ISSUE,Public Class Not Declared as Final,logictimebomb.java,20,public class CWE511_Logic_Time_Bomb__counter_07 extends AbstractTestCase,The class is not declared as final as per OWASP recommendations. It is considered best practice to make classes final where possible and practical (i.e. It has no classes which inherit from it). Non-Final classes can allow an attacker to extend a class in a malicious manner. Manually inspect the code to determine whether or not it is practical to make this class final.,,VCG
LOW,Operation on Primitive Data Type,logictimebomb.java,40,count++;,The code appears to be carrying out a mathematical operation on a primitive data type. In some circumstances this can result in an overflow and unexpected behaviour. Check the code manually to determine the risk.,,VCG
LOW,Operation on Primitive Data Type,logictimebomb.java,66,count++;,The code appears to be carrying out a mathematical operation on a primitive data type. In some circumstances this can result in an overflow and unexpected behaviour. Check the code manually to determine the risk.,,VCG
LOW,Operation on Primitive Data Type,logictimebomb.java,86,count++;,The code appears to be carrying out a mathematical operation on a primitive data type. In some circumstances this can result in an overflow and unexpected behaviour. Check the code manually to determine the risk.,,VCG
POTENTIAL ISSUE,Public Class Not Declared as Final,missingpasswordmasking.java,22,public class CWE549_Missing_Password_Masking__Servlet_01 extends AbstractTestCaseServlet,The class is not declared as final as per OWASP recommendations. It is considered best practice to make classes final where possible and practical (i.e. It has no classes which inherit from it). Non-Final classes can allow an attacker to extend a class in a malicious manner. Manually inspect the code to determine whether or not it is practical to make this class final.,,VCG
POTENTIAL ISSUE,Public Class Not Declared as Final,nonserializableinsession.java,28,public class CWE579_Non_Serializable_in_Session__Servlet_01 extends AbstractTestCaseServlet,The class is not declared as final as per OWASP recommendations. It is considered best practice to make classes final where possible and practical (i.e. It has no classes which inherit from it). Non-Final classes can allow an attacker to extend a class in a malicious manner. Manually inspect the code to determine whether or not it is practical to make this class final.,,VCG
STANDARD,Class Contains Public Variable: badString,nonserializableinsession.java,34,"public String badString = ""Bad"";","The class variable may be accessed and modified by other classes without the use of getter/setter methods. It is considered unsafe to have public fields or methods in a class unless required as any method, field, or class that is not private is a potential avenue of attack. It is safer to provide accessor methods to variables in order to limit their accessibility.",,VCG
STANDARD,Class Contains Public Variable: goodString,nonserializableinsession.java,40,"public String goodString = ""Good"";","The class variable may be accessed and modified by other classes without the use of getter/setter methods. It is considered unsafe to have public fields or methods in a class unless required as any method, field, or class that is not private is a potential avenue of attack. It is safer to provide accessor methods to variables in order to limit their accessibility.",,VCG
MEDIUM,Cleartext Transmission of Sensitive Information,ldapinjection.java,60,,Reading from an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.,CWE-319,Snyk
,,cowcontroller.java,11,"@[1m[24mRequestMapping[0m(value = ""/cowsay"")",Detected a method annotated with 'RequestMapping' that does not specify the HTTP method.,,Semgrep
,,cowsay.java,11,"[1m[24mprocessBuilder.command(""bash"", ""-c"", cmd)[0m;",A formatted or concatenated string was detected as input to a ProcessBuilder call. This is,,Semgrep
,,linkscontroller.java,19,"@[1m[24mRequestMapping[0m(value = ""/links-v2"", produces = ""application/json"")",Detected a method annotated with 'RequestMapping' that does not specify the HTTP method.,,Semgrep
,,postgres.java,67,"MessageDigest md = MessageDigest.getInstance([1m[24m""MD5""[0m);",Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and,,Semgrep
,,unsafequeryservlet.java,46,"[1m[24mresponse.getWriter().println(""Secret: "" + secret)[0m;",Detected a request with potential user-input going into a OutputStream or Writer object.,,Semgrep
,,user.java,49,ResultSet rs = [1m[24mstmt.executeQuery(query)[0m;,Detected a formatted string in a SQL statement. This could lead to SQL injection if,,Semgrep
CRITICAL,Unsanitized external input in SQL query,user.java,49,ResultSet rs = stmt.executeQuery(query);,,,Bearer
MEDIUM,Observable Timing Discrepancy,logincontroller.java,21,if (Postgres.md5(input.password).equals(user.hashedPassword)) {,,CWE-208,Bearer
LOW,Leakage of sensitive information in exception message,comment.java,55,e.printStackTrace();,,,Bearer
LOW,Leakage of sensitive information in exception message,comment.java,70,e.printStackTrace();,,,Bearer
LOW,Leakage of sensitive information in exception message,cowsay.java,24,e.printStackTrace();,,,Bearer
LOW,Leakage of sensitive information in exception message,postgres.java,25,e.printStackTrace();,,,Bearer
LOW,Leakage of sensitive information in exception message,postgres.java,100,e.printStackTrace();,,,Bearer
LOW,Leakage of sensitive information in exception message,postgres.java,114,e.printStackTrace();,,,Bearer
LOW,Leakage of sensitive information in exception message,user.java,34,e.printStackTrace();,,,Bearer
LOW,Leakage of sensitive information in exception message,user.java,58,e.printStackTrace();,,,Bearer
CRITICAL,Usage of hard-coded database password,unsafequeryservlet.java,29,"connection = DriverManager.getConnection(DB_URL, DB_USER, DB_PASSWORD);",,,Bearer
CRITICAL,Unsanitized external input in SQL query,unsafequeryservlet.java,41,result = statement.executeQuery(query);,,,Bearer
CRITICAL,Unsanitized external input in SQL query,user.java,49,ResultSet rs = stmt.executeQuery(query);,,,Bearer
MEDIUM,Observable Timing Discrepancy,logincontroller.java,21,if (Postgres.md5(input.password).equals(user.hashedPassword)) {,,CWE-208,Bearer
LOW,Leakage of sensitive information in exception message,comment.java,55,e.printStackTrace();,,,Bearer
LOW,Leakage of sensitive information in exception message,comment.java,70,e.printStackTrace();,,,Bearer
LOW,Leakage of sensitive information in exception message,cowsay.java,24,e.printStackTrace();,,,Bearer
LOW,Leakage of sensitive information in exception message,postgres.java,25,e.printStackTrace();,,,Bearer
LOW,Leakage of sensitive information in exception message,postgres.java,100,e.printStackTrace();,,,Bearer
LOW,Leakage of sensitive information in exception message,postgres.java,114,e.printStackTrace();,,,Bearer
LOW,Leakage of sensitive information in exception message,unsafequeryservlet.java,49,e.printStackTrace();,,,Bearer
LOW,Leakage of sensitive information in exception message,unsafequeryservlet.java,52,try { if (result != null) result.close(); } catch (Exception e) { e.printStackTrace(); },,,Bearer
LOW,Leakage of sensitive information in exception message,unsafequeryservlet.java,53,try { if (statement != null) statement.close(); } catch (Exception e) { e.printStackTrace(); },,,Bearer
LOW,Leakage of sensitive information in exception message,unsafequeryservlet.java,54,try { if (connection != null) connection.close(); } catch (Exception e) { e.printStackTrace(); },,,Bearer
LOW,Leakage of sensitive information in exception message,user.java,34,e.printStackTrace();,,,Bearer
LOW,Leakage of sensitive information in exception message,user.java,58,e.printStackTrace();,,,Bearer
