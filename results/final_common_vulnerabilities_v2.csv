File,Severity_Horusec,Line_Horusec,Code_Horusec,Title_Horusec,Details_Horusec,CWE ID_Horusec,Severity_VCG,Line_VCG,Code_VCG,Title_VCG,Details_VCG,CWE ID_VCG,Severity_Snyk,Line_Snyk,Code_Snyk,Title_Snyk,Details_Snyk,CWE ID_Snyk,Severity_Bearer,Line_Bearer,Code_Bearer,Title_Bearer,Details_Bearer,CWE ID_Bearer,Severity_Semgrep,Line_Semgrep,Code_Semgrep,Title_Semgrep,Details_Semgrep,CWE ID_Semgrep
unsafequeryservlet.java,CRITICAL,17,"private static final String DB_PASSWORD = ""password"";",Hard-coded password,"Hard-coded password The software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",,MEDIUM,17.0,"private static final String DB_PASSWORD = ""password"";",Code Appears to Contain Hard Coded Password,The code may contain a hard-coded password which an attacker could obtain from the source or by dis-assembling the executable. Please manually review the code:,,,,,,,,CRITICAL,29.0,"connection = DriverManager.getConnection(DB_URL, DB_USER, DB_PASSWORD);",Usage of hard-coded database password,,,,,,,,
user.java,HIGH,47,"String query = ""select * from users where username = '"" + un + ""' limit 1"";",SQL Injection,"SQL Injection The input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",CWE-89,CRITICAL,49.0,ResultSet rs = stmt.executeQuery(query);,Potential SQL Injection,The application appears to allow SQL injection via a pre-prepared dynamic SQL statement. No validator plug-ins were located in the application's XML files.,,,,,,,,CRITICAL,49.0,ResultSet rs = stmt.executeQuery(query);,Unsanitized external input in SQL query,,,,49.0,ResultSet rs = [1m[24mstmt.executeQuery(query)[0m;,,Detected a formatted string in a SQL statement. This could lead to SQL injection if,
logincontroller.java,HIGH,21,if (Postgres.md5(input.password).equals(user.hashedPassword)) {,Unsafe hash equals,"Unsafe hash equals An attacker might be able to detect the value of the secret hash due to the exposure of comparison timing. When the functions Arrays.equals() or String.equals() are called, they will exit earlier if fewer bytes are matched. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",,STANDARD,31.0,public String password;,Class Contains Public Variable: password,"The class variable may be accessed and modified by other classes without the use of getter/setter methods. It is considered unsafe to have public fields or methods in a class unless required as any method, field, or class that is not private is a potential avenue of attack. It is safer to provide accessor methods to variables in order to limit their accessibility.",,,,,,,,MEDIUM,21.0,if (Postgres.md5(input.password).equals(user.hashedPassword)) {,Observable Timing Discrepancy,,CWE-208,,,,,,
unsafequeryservlet.java,HIGH,48,} catch (Exception e) {,Information Exposure Through An Error Message,"Information Exposure Through An Error Message The sensitive information may be valuable information on its own (such as a password), or it may be useful for launching other, more deadly attacks. For more information checkout the CWE-209 (https://cwe.mitre.org/data/definitions/209.html) advisory.",,MEDIUM,17.0,"private static final String DB_PASSWORD = ""password"";",Code Appears to Contain Hard Coded Password,The code may contain a hard-coded password which an attacker could obtain from the source or by dis-assembling the executable. Please manually review the code:,,,,,,,,LOW,52.0,try { if (result != null) result.close(); } catch (Exception e) { e.printStackTrace(); },Leakage of sensitive information in exception message,,,,,,,,
unsafequeryservlet.java,HIGH,35,"t FROM Users WHERE (username = '"" + username + ""' AND NOT role = 'admin')"";",SQL Injection,"SQL Injection The input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",CWE-89,CRITICAL,41.0,result = statement.executeQuery(query);,Potential SQL Injection,The application appears to allow SQL injection via a pre-prepared dynamic SQL statement. No validator plug-ins were located in the application's XML files.,,,,,,,,CRITICAL,41.0,result = statement.executeQuery(query);,Unsanitized external input in SQL query,,,,,,,,
postgres.java,HIGH,24,} catch (Exception e) {,Information Exposure Through An Error Message,"Information Exposure Through An Error Message The sensitive information may be valuable information on its own (such as a password), or it may be useful for launching other, more deadly attacks. For more information checkout the CWE-209 (https://cwe.mitre.org/data/definitions/209.html) advisory.",,,,,,,,MEDIUM,46.0,,Use of Hardcoded Credentials,Do not hardcode passwords in code. Found hardcoded password used in here.,"CWE-259, CWE-798",,,,,,,,,,,,
postgres.java,HIGH,67,"MessageDigest md = MessageDigest.getInstance(""MD5"");",Weak Cryptographic Hash Function used,"Weak Cryptographic Hash Function used Using a weak CHF pose a threat to your application security since it can be vulnerable to a number of attacks that could lead to data leaking, improper access of features and resources of your infrastructure and even rogue sessions. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",,,,,,,,LOW,67.0,,Use of Password Hash With Insufficient Computational Effort,The MD5 hash (used in java.security.MessageDigest.getInstance) is insecure. Consider changing it to a secure hash algorithm,CWE-916,,,,,,,,67.0,"MessageDigest md = MessageDigest.getInstance([1m[24m""MD5""[0m);",,Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and,
